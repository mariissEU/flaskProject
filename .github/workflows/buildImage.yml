name: Python Flask GitHub action for docker registry 
on:
  workflow_dispatch:

# Env variable
env:
  DOCKER_USER: sselluos
  DOCKER_TOKEN: ${{secrets.DOCKER_HUB_TOKEN}}
  AWS_PRIVATE_KEY: ${{secrets.AWS_EC2_PRIVATE_KEY}}
  REPO_NAME: sselluos/flaskproject
  EC2_PUBLIC_IP: 54.176.78.126
  VERSION_VAR: 1.0.0
  S3_BUCKET: maris-test-s3-bucket


jobs:
  build:  
    runs-on: ubuntu-latest  
    steps:
    - uses: actions/checkout@v4 
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ env.DOCKER_USER }}
        password: ${{ env.DOCKER_TOKEN }}
    - name: Get build hash
      run: echo BUILD_NUMBER=${GITHUB_SHA::7} >> $GITHUB_ENV
    - name: Build the Docker image 
      run: docker build . --file Dockerfile --tag ${REPO_NAME}:${VERSION_VAR}-${BUILD_NUMBER}
    - name: Docker Push
      run: docker push ${REPO_NAME}:${VERSION_VAR}-${BUILD_NUMBER}
    
    - name: Make tar from image.
      run: docker save ${REPO_NAME}:${VERSION_VAR}-${BUILD_NUMBER} | gzip > flaskapp:${VERSION_VAR}.tar
    - name: Set up AWS CLI         
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-1  
    - name: Send Image to S3 bucket
      run: aws s3 cp flaskapp:${VERSION_VAR}.tar s3://${S3_BUCKET}/images/
      
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Get build hash
      run: echo BUILD_NUMBER=${GITHUB_SHA::7} >> $GITHUB_ENV
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ env.DOCKER_USER }}
        password: ${{ env.DOCKER_TOKEN }}
    - name: Set permissions for private key
      run: |
        echo "${{ env.AWS_PRIVATE_KEY }}" > AWSkey.pem
        chmod 600 AWSkey.pem
    - name: Pull Docker image
      run: |
        ssh -o StrictHostKeyChecking=no -i AWSkey.pem ubuntu@${EC2_PUBLIC_IP} "sudo docker pull ${REPO_NAME}:${VERSION_VAR}-${BUILD_NUMBER}"
    - name: Stop running container
      run: |
        ssh -o StrictHostKeyChecking=no -i AWSkey.pem ubuntu@${EC2_PUBLIC_IP} 'docker stop flaskapp || true'
        ssh -o StrictHostKeyChecking=no -i AWSkey.pem ubuntu@${EC2_PUBLIC_IP} 'docker rm flaskapp || true'
    - name: Run new container
      run: |
        ssh -o StrictHostKeyChecking=no -i AWSkey.pem ubuntu@${EC2_PUBLIC_IP} "docker run -d --name flaskapp -p 8080:8080 --mount source=flaskappVolume,target=/python-docker/database.db ${REPO_NAME}:${VERSION_VAR}-${BUILD_NUMBER}"



